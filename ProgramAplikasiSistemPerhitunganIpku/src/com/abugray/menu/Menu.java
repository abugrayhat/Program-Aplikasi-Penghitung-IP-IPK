package com.abugray.menu;

import com.abugray.conect.DatabaseConnection;
import static com.abugray.menu.component.ipk;
import static com.abugray.menu.component.ips;
import static com.abugray.menu.component.mk1;
import static com.abugray.menu.component.mk2;
import static com.abugray.menu.component.mk3;
import static com.abugray.menu.component.mk4;
import static com.abugray.menu.component.mk5;
import static com.abugray.menu.component.mk6;
import static com.abugray.menu.component.mk7;
import static com.abugray.menu.component.mk8;
import static com.abugray.menu.component.mk9;
import static com.abugray.menu.component.nilai1TF;
import static com.abugray.menu.component.nilai2TF;
import static com.abugray.menu.component.nilai3TF;
import static com.abugray.menu.component.nilai4TF;
import static com.abugray.menu.component.nilai5TF;
import static com.abugray.menu.component.nilai6TF;
import static com.abugray.menu.component.nilai7TF;
import static com.abugray.menu.component.nilai8TF;
import static com.abugray.menu.component.nilai9TF;
import static com.abugray.menu.component.nk;
import static com.abugray.menu.component.nk1;
import static com.abugray.menu.component.nk2;
import static com.abugray.menu.component.nk3;
import static com.abugray.menu.component.nk4;
import static com.abugray.menu.component.nk5;
import static com.abugray.menu.component.nk6;
import static com.abugray.menu.component.nk7;
import static com.abugray.menu.component.nk8;
import static com.abugray.menu.component.nk9;
import static com.abugray.menu.component.sks;
import static com.abugray.menu.component.sks1TF;
import static com.abugray.menu.component.sks2TF;
import static com.abugray.menu.component.sks3TF;
import static com.abugray.menu.component.sks4TF;
import static com.abugray.menu.component.sks5TF;
import static com.abugray.menu.component.sks6TF;
import static com.abugray.menu.component.sks7TF;
import static com.abugray.menu.component.sks8TF;
import static com.abugray.menu.component.sks9TF;
import static com.abugray.menu.component.smesterCB;
import static com.abugray.menu.home.almt;
import static com.abugray.menu.home.email;
import static com.abugray.menu.home.hp;
import static com.abugray.menu.home.nm;
import static com.abugray.menu.home.npm;
import static com.abugray.menu.home.prodi;
import static com.abugray.menu.home.pt;
import static com.abugray.menu.home.site;
import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author abu
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    private String pergutuanT, alamat, henpon, website, mail, nama, nopm, programs, query;
    private ImageIcon question, info, warning, error, icon;
    private String uname;
    private ResultSet rs;
    private Statement st;
    Connection koneksi;

    public Menu() {
        initComponents();
        mainP.setViewportView(new home());
        warna(jPanel2, jPanel3, jPanel5);
        jButton5.setVisible(false);
        koneksi = DatabaseConnection.getConnection("localhost", "3306", "root", "", "ipk");
        icon = new ImageIcon("src/com/abugray/icon/accessories-calculator-symbolic.symbolic_1.png");
        info = new ImageIcon("src/com/abugray/icon/dlg-info.png");
        warning = new ImageIcon("src/com/abugray/icon/dlg-warning.png");
        question = new ImageIcon("src/com/abugray/icon/dlg-question.png");
        error = new ImageIcon("src/com/abugray/icon/dlg-error.png");

        setIconImage(icon.getImage());
        setdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem5 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem6 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        avatarL = new javax.swing.JLabel();
        usernameL = new javax.swing.JLabel();
        timeL = new javax.swing.JLabel();
        dateL = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        infoL = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        inputKHSL = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        khsL1 = new javax.swing.JLabel();
        mainP = new javax.swing.JScrollPane();
        tb = new javax.swing.JToolBar();
        jButton5 = new javax.swing.JButton();
        countTB = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        mb = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        homeMi = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMi = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        countMI = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        jCheckBoxMenuItem4.setSelected(true);
        jCheckBoxMenuItem4.setText("Show Menu Bar");
        jCheckBoxMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem4ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jCheckBoxMenuItem4);

        jCheckBoxMenuItem5.setSelected(true);
        jCheckBoxMenuItem5.setText("Show Tool Bar");
        jCheckBoxMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem5ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jCheckBoxMenuItem5);

        jCheckBoxMenuItem6.setSelected(true);
        jCheckBoxMenuItem6.setText("Show Navigation Bar");
        jCheckBoxMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem6ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jCheckBoxMenuItem6);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IPKu");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        avatarL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        avatarL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/avatar-default-symbolic.symbolic.png"))); // NOI18N

        usernameL.setForeground(new java.awt.Color(255, 255, 255));
        usernameL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/avatar-default-symbolic.symbolic_1.png"))); // NOI18N
        usernameL.setText("nuryadin");

        timeL.setForeground(new java.awt.Color(255, 255, 255));
        timeL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/emoji-recent-symbolic.symbolic.png"))); // NOI18N
        timeL.setText("00:00:00");

        dateL.setForeground(new java.awt.Color(255, 255, 255));
        dateL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/x-office-calendar-symbolic.symbolic.png"))); // NOI18N
        dateL.setText("07/10/2000");

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        infoL.setBackground(new java.awt.Color(51, 51, 51));
        infoL.setForeground(new java.awt.Color(255, 255, 255));
        infoL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoL.setText("Informasi");
        infoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                infoLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                infoLMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(infoL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(infoL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        inputKHSL.setBackground(new java.awt.Color(51, 51, 51));
        inputKHSL.setForeground(new java.awt.Color(255, 255, 255));
        inputKHSL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inputKHSL.setText("Input Nilai");
        inputKHSL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputKHSLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                inputKHSLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                inputKHSLMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputKHSL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputKHSL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jLabel8.setBackground(new java.awt.Color(51, 51, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/open-menu-symbolic.symbolic.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));

        khsL1.setBackground(new java.awt.Color(51, 51, 51));
        khsL1.setForeground(new java.awt.Color(255, 255, 255));
        khsL1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        khsL1.setText("Data KHS");
        khsL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                khsL1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                khsL1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                khsL1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(khsL1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(khsL1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateL)
                                    .addComponent(timeL)
                                    .addComponent(usernameL)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(avatarL, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(avatarL, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(usernameL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateL)
                .addGap(42, 42, 42)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        mainP.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mainP.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                mainPAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        mainP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainPMouseClicked(evt);
            }
        });

        tb.setBackground(new java.awt.Color(204, 204, 204));
        tb.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tb.setRollover(true);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/format-justify-fill-symbolic.symbolic.png"))); // NOI18N
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        tb.add(jButton5);

        countTB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/accessories-calculator-symbolic.symbolic.png"))); // NOI18N
        countTB.setFocusable(false);
        countTB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        countTB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        countTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countTBActionPerformed(evt);
            }
        });
        tb.add(countTB);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/document-save-symbolic.symbolic.png"))); // NOI18N
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        tb.add(jButton3);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/view-refresh-symbolic.symbolic.png"))); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        tb.add(jButton2);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/application-exit-symbolic.symbolic.png"))); // NOI18N
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        tb.add(jButton4);

        mb.setBackground(new java.awt.Color(204, 204, 204));

        jMenu1.setMnemonic('f');
        jMenu1.setText("File");

        homeMi.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        homeMi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/user-home-symbolic.symbolic.png"))); // NOI18N
        homeMi.setMnemonic('h');
        homeMi.setText("Home");
        homeMi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMiActionPerformed(evt);
            }
        });
        jMenu1.add(homeMi);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/document-save-symbolic.symbolic_1.png"))); // NOI18N
        jMenuItem1.setMnemonic('s');
        jMenuItem1.setText("Save");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        exitMi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/application-exit-symbolic.symbolic_1.png"))); // NOI18N
        exitMi.setMnemonic('x');
        exitMi.setText("Logout");
        exitMi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMiActionPerformed(evt);
            }
        });
        jMenu1.add(exitMi);

        mb.add(jMenu1);

        jMenu2.setMnemonic('e');
        jMenu2.setText("Edit");

        countMI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/accessories-calculator-symbolic.symbolic_1.png"))); // NOI18N
        countMI.setMnemonic('o');
        countMI.setText("Count");
        countMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countMIActionPerformed(evt);
            }
        });
        jMenu2.add(countMI);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/view-refresh-symbolic.symbolic_1.png"))); // NOI18N
        jMenuItem11.setMnemonic('c');
        jMenuItem11.setText("Clear");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        mb.add(jMenu2);

        jMenu3.setMnemonic('v');
        jMenu3.setText("View");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Show Menu Bar");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Show Tool Bar");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("Show Navigation Bar");
        jCheckBoxMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem3);

        mb.add(jMenu3);

        jMenu4.setMnemonic('h');
        jMenu4.setText("Help");

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/help-contents-symbolic.symbolic.png"))); // NOI18N
        jMenuItem7.setMnemonic('c');
        jMenuItem7.setText("Help Content");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/abugray/icon/user-info-symbolic.symbolic.png"))); // NOI18N
        jMenuItem6.setMnemonic('a');
        jMenuItem6.setText("About");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        mb.add(jMenu4);

        setJMenuBar(mb);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainP, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE))
            .addComponent(tb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainP)))
        );

        setSize(new java.awt.Dimension(846, 613));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void countMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countMIActionPerformed
        nk.setText(setToString(hitungIPK()));
        sks.setText(setToString(hitungSKS()));
        ips.setText(setToString(hitungIPK() / hitungSKS()));
    }//GEN-LAST:event_countMIActionPerformed

    private void inputKHSLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputKHSLMouseClicked
        mainP.setViewportView(new component());
        warna(jPanel3, jPanel2, jPanel5);
    }//GEN-LAST:event_inputKHSLMouseClicked

    private void infoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoLMouseClicked
        mainP.setViewportView(new home());
        warna(jPanel2, jPanel3, jPanel5);
    }//GEN-LAST:event_infoLMouseClicked

    private void homeMiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMiActionPerformed
        mainP.setViewportView(new home());
    }//GEN-LAST:event_homeMiActionPerformed

    private void exitMiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMiActionPerformed
        logout();
    }//GEN-LAST:event_exitMiActionPerformed

    private void khsL1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khsL1MouseClicked
        warna(jPanel5, jPanel3, jPanel2);
    }//GEN-LAST:event_khsL1MouseClicked

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        clear();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        menuBar(jCheckBoxMenuItem1, jCheckBoxMenuItem4);
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jCheckBoxMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem3ActionPerformed
        if (jCheckBoxMenuItem3.isSelected()) {
            navBar(true, false, true);
        } else {
            navBar(false, true, false);
        }
    }//GEN-LAST:event_jCheckBoxMenuItem3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        clear();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void countTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countTBActionPerformed
        nk.setText(setToString(hitungIPK()));
        sks.setText(setToString(hitungSKS()));
        ips.setText(setToString(hitungIPK() / hitungSKS()));
    }//GEN-LAST:event_countTBActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        new About().setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        url("https://abugrayhat.github.io");
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void infoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoLMouseEntered
        infoL.setOpaque(true);
        infoL.setBackground(Color.black);
    }//GEN-LAST:event_infoLMouseEntered

    private void inputKHSLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputKHSLMouseEntered
        inputKHSL.setOpaque(true);
        inputKHSL.setBackground(Color.black);
    }//GEN-LAST:event_inputKHSLMouseEntered

    private void khsL1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khsL1MouseEntered
        khsL1.setOpaque(true);
        khsL1.setBackground(Color.black);
    }//GEN-LAST:event_khsL1MouseEntered

    private void infoLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoLMouseExited
        infoL.setOpaque(false);
        infoL.setBackground(new Color(51, 51, 51));
    }//GEN-LAST:event_infoLMouseExited

    private void inputKHSLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputKHSLMouseExited
        inputKHSL.setOpaque(false);
        inputKHSL.setBackground(new Color(51, 51, 51));
    }//GEN-LAST:event_inputKHSLMouseExited

    private void khsL1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khsL1MouseExited
        khsL1.setOpaque(false);
        khsL1.setBackground(new Color(51, 51, 51));
    }//GEN-LAST:event_khsL1MouseExited

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        navBar(false, true, false);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        navBar(true, false, true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed

    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        toolBar(jCheckBoxMenuItem2, jCheckBoxMenuItem5);
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jCheckBoxMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem4ActionPerformed
        menuBar(jCheckBoxMenuItem4, jCheckBoxMenuItem1);
    }//GEN-LAST:event_jCheckBoxMenuItem4ActionPerformed

    private void jCheckBoxMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem5ActionPerformed
        toolBar(jCheckBoxMenuItem5, jCheckBoxMenuItem2);
    }//GEN-LAST:event_jCheckBoxMenuItem5ActionPerformed

    private void jCheckBoxMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem6ActionPerformed
        if (jCheckBoxMenuItem6.isSelected()) {
            navBar(true, false, true);
        } else {
            navBar(false, true, false);
        }
    }//GEN-LAST:event_jCheckBoxMenuItem6ActionPerformed

    private void mainPAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_mainPAncestorAdded

    }//GEN-LAST:event_mainPAncestorAdded

    private void mainPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            jPopupMenu1.show((Component) evt.getSource(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_mainPMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        logout();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        saveAll();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        saveAll();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatarL;
    public static javax.swing.JMenuItem countMI;
    public static javax.swing.JButton countTB;
    private javax.swing.JLabel dateL;
    private javax.swing.JMenuItem exitMi;
    private javax.swing.JMenuItem homeMi;
    private javax.swing.JLabel infoL;
    private javax.swing.JLabel inputKHSL;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem5;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel khsL1;
    private javax.swing.JScrollPane mainP;
    private javax.swing.JMenuBar mb;
    private javax.swing.JToolBar tb;
    private javax.swing.JLabel timeL;
    public static javax.swing.JLabel usernameL;
    // End of variables declaration//GEN-END:variables

    public double getNilai(String a) {
        double nilaiHuruf = 0.0;
        try {
            if (a.equalsIgnoreCase("A")) {
                nilaiHuruf = 4.0;
            } else if (a.equalsIgnoreCase("AB")) {
                nilaiHuruf = 3.5;
            } else if (a.equalsIgnoreCase("B")) {
                nilaiHuruf = 3.0;
            } else if (a.equalsIgnoreCase("BC")) {
                nilaiHuruf = 2.5;
            } else if (a.equalsIgnoreCase("C")) {
                nilaiHuruf = 2.0;
            } else if (a.equalsIgnoreCase("CD")) {
                nilaiHuruf = 1.5;
            } else if (a.equalsIgnoreCase("D")) {
                nilaiHuruf = 1.0;
            } else if (a.equalsIgnoreCase("DE")) {
                nilaiHuruf = 0.5;
            } else if (a.equalsIgnoreCase("E")) {
                nilaiHuruf = 0.0;
            } else {
                nilaiHuruf = 0.0;
            }
        } catch (NumberFormatException e) {
        }
        return nilaiHuruf;
    }

    public double hitungNxK(String a, String b) {
        double hasil = 0, nilai, s;
        try {
            nilai = getNilai(a);
            s = getSKS(b);
            hasil = nilai * s;
        } catch (NumberFormatException e) {
        }
        return hasil;
    }

    public int getSKS(String a) {
        int besarSks = 0;
        try {
            besarSks = Integer.parseInt(a);
        } catch (NumberFormatException e) {
        }
        return besarSks;
    }

    public double hitungIPK() {
        double hasilnk = 0, nilai1, nilai2, nilai3, nilai4, nilai5, nilai6, nilai7, nilai8, nilai9, totnk;
        try {
            nilai1 = hitungNxK(nilai1TF.getText(), sks1TF.getText());
            nilai2 = hitungNxK(component.nilai2TF.getText(), sks2TF.getText());
            nilai3 = hitungNxK(nilai3TF.getText(), sks3TF.getText());
            nilai4 = hitungNxK(nilai4TF.getText(), sks4TF.getText());
            nilai5 = hitungNxK(nilai5TF.getText(), sks5TF.getText());
            nilai6 = hitungNxK(nilai6TF.getText(), sks6TF.getText());
            nilai7 = hitungNxK(nilai7TF.getText(), sks7TF.getText());
            nilai8 = hitungNxK(nilai8TF.getText(), sks8TF.getText());
            nilai9 = hitungNxK(nilai9TF.getText(), sks9TF.getText());

            totnk = (nilai1 + nilai2 + nilai3 + nilai4 + nilai5 + nilai6 + nilai7 + nilai8 + nilai9);
            hasilnk = (totnk);
            String format = String.format("%.2f", hasilnk);
            hasilnk = Double.parseDouble(format);
        } catch (NumberFormatException e) {
        }
        return hasilnk;
    }

    public double hitungSKS() {
        double jumlahsks = 0, totsks;
        double sks1, sks2, sks3, sks4, sks5, sks6, sks7, sks8, sks9;
        try {
            sks1 = getSKS(sks1TF.getText());
            sks2 = getSKS(sks2TF.getText());
            sks3 = getSKS(sks3TF.getText());
            sks4 = getSKS(sks4TF.getText());
            sks5 = getSKS(sks5TF.getText());
            sks6 = getSKS(sks6TF.getText());
            sks7 = getSKS(sks7TF.getText());
            sks8 = getSKS(sks8TF.getText());
            sks9 = getSKS(sks9TF.getText());

            totsks = (sks1 + sks2 + sks3 + sks4 + sks5 + sks6 + sks7 + sks8 + sks9);

            jumlahsks = (totsks);
            String format = String.format("%.2f", jumlahsks);
            jumlahsks = Double.parseDouble(format);
        } catch (NumberFormatException e) {
        }
        return jumlahsks;
    }

    public String setToString(Object object) {
        String valueOf = String.valueOf(object);
        return valueOf;
    }

    public static void clear() {
        if (home.saveL.isShowing()) {
            try {
                home.pt.setText("");
                home.almt.setText("");
                home.hp.setText("");
                home.site.setText("");
                home.email.setText("");

                home.nm.setText("");
                home.npm.setText("");
                home.prodi.setText("");
            } catch (Exception e) {
            }
        } else {
            try {
                component.mk1.setText("");
                component.mk2.setText("");
                component.mk3.setText("");
                component.mk4.setText("");
                component.mk5.setText("");
                component.mk6.setText("");
                component.mk7.setText("");
                component.mk8.setText("");
                component.mk9.setText("");

                component.sks1TF.setText("");
                component.sks2TF.setText("");
                component.sks3TF.setText("");
                component.sks4TF.setText("");
                component.sks5TF.setText("");
                component.sks6TF.setText("");
                component.sks7TF.setText("");
                component.sks8TF.setText("");
                component.sks9TF.setText("");

                component.nk1.setText("");
                component.nk2.setText("");
                component.nk3.setText("");
                component.nk4.setText("");
                component.nk5.setText("");
                component.nk6.setText("");
                component.nk7.setText("");
                component.nk8.setText("");
                component.nk9.setText("");

                component.nilai1TF.setText("");
                component.nilai2TF.setText("");
                component.nilai3TF.setText("");
                component.nilai4TF.setText("");
                component.nilai5TF.setText("");
                component.nilai6TF.setText("");
                component.nilai7TF.setText("");
                component.nilai8TF.setText("");
                component.nilai9TF.setText("");

                component.ipk.setText("");
                component.ips.setText("");
                component.nk.setText("");
                component.sks.setText("");
            } catch (Exception e) {
            }
        }
    }

    private void warna(JPanel p, JPanel p2, JPanel p3) {
        p.setBackground(Color.red);
        p2.setBackground(new Color(51, 51, 51));
        p3.setBackground(new Color(51, 51, 51));
    }

    private void navBar(boolean b, boolean b2, boolean b3) {
        jPanel1.setVisible(b);
        jButton5.setVisible(b2);
        jCheckBoxMenuItem3.setSelected(b3);
        jCheckBoxMenuItem6.setSelected(b3);
    }

    private void toolBar(JCheckBoxMenuItem checkBox, JCheckBoxMenuItem checkBox2) {
        if (checkBox.isSelected()) {
            tb.setVisible(true);
            checkBox2.setSelected(true);
        } else {
            tb.setVisible(false);
            checkBox2.setSelected(false);
        }
    }

    private void menuBar(JCheckBoxMenuItem checkBox, JCheckBoxMenuItem checkBox2) {
        if (checkBox.isSelected()) {
            mb.setVisible(true);
            checkBox2.setSelected(true);
        } else {
            mb.setVisible(false);
            checkBox2.setSelected(false);
        }
    }

    public String getdate() {
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        return dateFormat.format(date);
    }

    private void setTime() {
        int i = 0;
        new Thread() {
            @Override
            public void run() {
                while (i == 0) {
                    DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
                    Date date = new Date();
                    String s = dateFormat.format(date);
                    timeL.setText(s);
                }
            }
        }.start();
    }

    private void setdate() {
        setTime();
        dateL.setText(getdate());
    }

    public static void url(String url) {
        Desktop de = Desktop.getDesktop();
        try {
            URI uri = new URI(url);

            if (Desktop.isDesktopSupported()) {
                try {
                    de.browse(uri);
                } catch (IOException e) {
                }
            }
        } catch (URISyntaxException ex) {
            Logger.getLogger(About.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void save(){
        pergutuanT = pt.getText();
        alamat = almt.getText();
        henpon = hp.getText();
        website = site.getText();
        mail = email.getText();
        nama = nm.getText();
        nopm = npm.getText();
        programs = prodi.getText();
        try {
            st = koneksi.createStatement();
            try {
                query = "UPDATE `t_info` SET `pt` = '"+pergutuanT+"', `almt` = '"+alamat+"', `hp` = '"+henpon+"', `site` = '"+website+"', `email` = '"+mail+"', `nm` = '"+nama+"', `npm` = '"+nopm+"', `prodi` = '"+programs+"' WHERE `t_info`.`kd_info` = 0; ";
                st.execute(query);
                st.close();
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan!", "Sukses", JOptionPane.INFORMATION_MESSAGE, info);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Data gagal disimpan!", "Ksealahan", JOptionPane.ERROR_MESSAGE, error);
            }       
        } catch (SQLException e) {
        }
    }
     private void logout(){
        Object[] object = {"Ya", "Tidak"};
        int s = JOptionPane.showOptionDialog(this, "Apakah anda yakin ingin Logout ?", "Logout", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, question, object, object[0]);
        if(s == JOptionPane.YES_OPTION){
            dispose();
            new Login().setVisible(true);
        }
    }

    private void saveAll() {
        if(home.saveL.isShowing()){
            try {
                save();
            } catch (Exception e) {
            }
        }else if(component.hitungL.isShowing()){
            try {
                saveSmester();
            } catch (Exception e) {
            }
        }
    }
    
    public void save(String smester, String nilai){
        String mkk1, mkk2, mkk3, mkk4, mkk5, mkk6, mkk7, mkk8, mkk9;
        mkk1 = mk1.getText();
        mkk2 = mk2.getText();
        mkk3 = mk3.getText();
        mkk4 = mk4.getText();
        mkk5 = mk5.getText();
        mkk6 = mk6.getText();
        mkk7 = mk7.getText();
        mkk8 = mk8.getText();
        mkk9 = mk9.getText();
        
        String skss1, skss2, skss3, skss4, skss5, skss6, skss7, skss8, skss9;
        skss1 = sks1TF.getText();
        skss2 = sks2TF.getText();
        skss3 = sks3TF.getText();
        skss4 = sks4TF.getText();
        skss5 = sks5TF.getText();
        skss6 = sks6TF.getText();
        skss7 = sks7TF.getText();
        skss8 = sks8TF.getText();
        skss9 = sks9TF.getText();
        
        
        String nn1, nn2, nn3, nn4, nn5, nn6, nn7, nn8, nn9;
        nn1 = nilai1TF.getText();
        nn2 = nilai2TF.getText();
        nn3 = nilai3TF.getText();
        nn4 = nilai4TF.getText();
        nn5 = nilai5TF.getText();
        nn6 = nilai6TF.getText();
        nn7 = nilai7TF.getText();
        nn8 = nilai8TF.getText();
        nn9 = nilai9TF.getText();
        
        String nnk1, nnk2, nnk3, nnk4, nnk5, nnk6, nnk7, nnk8, nnk9;
        nnk1 = nk1.getText();
        nnk2 = nk2.getText();
        nnk3 = nk3.getText();
        nnk4 = nk4.getText();
        nnk5 = nk5.getText();
        nnk6 = nk6.getText();
        nnk7 = nk7.getText();
        nnk8 = nk8.getText();
        nnk9 = nk9.getText();
        
        String jumsks, jumnk, nnips, nnipk;
        jumsks = sks.getText();
        jumnk = nk.getText();
        nnips = ips.getText();
        nnipk = ipk.getText();
        
        String query;
        
        try {
            st = koneksi.createStatement();
            try {
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk1+"', `sks` = '"+skss1+"', `nilai` = '"+nn1+"', `nxk` = '"+nnk1+"' WHERE `"+smester+"`.`kd_matkul` = 1; ";
                st.execute(query);
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk2+"', `sks` = '"+skss2+"', `nilai` = '"+nn2+"', `nxk` = '"+nnk2+"' WHERE `"+smester+"`.`kd_matkul` = 2; ";
                st.execute(query);
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk3+"', `sks` = '"+skss3+"', `nilai` = '"+nn3+"', `nxk` = '"+nnk3+"' WHERE `"+smester+"`.`kd_matkul` = 3; ";
                st.execute(query);
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk4+"', `sks` = '"+skss4+"', `nilai` = '"+nn4+"', `nxk` = '"+nnk4+"' WHERE `"+smester+"`.`kd_matkul` = 4; ";
                st.execute(query);
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk5+"', `sks` = '"+skss5+"', `nilai` = '"+nn5+"', `nxk` = '"+nnk5+"' WHERE `"+smester+"`.`kd_matkul` = 5; ";
                st.execute(query);
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk6+"', `sks` = '"+skss6+"', `nilai` = '"+nn6+"', `nxk` = '"+nnk6+"' WHERE `"+smester+"`.`kd_matkul` = 6; ";
                st.execute(query);
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk7+"', `sks` = '"+skss7+"', `nilai` = '"+nn7+"', `nxk` = '"+nnk7+"' WHERE `"+smester+"`.`kd_matkul` = 7; ";
                st.execute(query);
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk8+"', `sks` = '"+skss8+"', `nilai` = '"+nn8+"', `nxk` = '"+nnk8+"' WHERE `"+smester+"`.`kd_matkul` = 8; ";
                st.execute(query);
                query = "UPDATE `"+smester+"` SET `matkul` = '"+mkk9+"', `sks` = '"+skss9+"', `nilai` = '"+nn9+"', `nxk` = '"+nnk9+"' WHERE `"+smester+"`.`kd_matkul` = 9; ";
                st.execute(query);
                query = "UPDATE `"+nilai+"` SET `ju_sks` = '"+jumsks+"', `jum_nxk` = '"+jumnk+"', `ips` = '"+nnips+"', `ipk` = '"+nnipk+"' WHERE `"+nilai+"`.`kd` = 1; ";
                st.execute(query);
                
                
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan!", "Sukses", JOptionPane.INFORMATION_MESSAGE, info);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Data gagal disimpan!", "Ksealahan", JOptionPane.ERROR_MESSAGE, error);
            }       
        } catch (SQLException e) {
        }
    }
    
    private void saveSmester(){
        switch (smesterCB.getSelectedIndex()) {
            case 1:
                save("smester1", "t_nilai1");
                break;
            case 2:
                save("smester2", "t_nilai2");
                break;
            case 3:
                save("smester3", "t_nilai3");
                break;
            case 4:
                save("smester4", "t_nilai4");
                break;
            case 5:
                save("smester5", "t_nilai5");
                break;
            case 6:
                save("smester6", "t_nilai6");
                break;
            case 7:
                save("smester7", "t_nilai7");
                break;
            case 8:
                save("smester8", "t_nilai8");
                break;
            default:   
        }
    }
}
